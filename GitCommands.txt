git init | to initialize a repository.
git status | to check status.

git config --global user.name "Your Name"
git config --global user.email "your@email.com"

Adding to staging area. Before we can commit our code, we need to place it inside the staging area.
git add file.etc file2.etc | to add a file or multiple files
git add . | to add all files.

To create a new commit, you will need to repeat the process of adding files to the staging area and then committing them after. Again, it's very useful to use the git status command to see which files were modified, staged, or untracked.
git comit -m "message" | to commit changes.

git log | Gives a history of commits.
git checkout <commit code> (real name - <commit-hash>) | to check out a version of commit.
git checkout master | To go back to the latest commit (the newest version of our project code)

To ignore files that you don't want to be tracked or added to the staging area, you can create a file called .gitignore in your main project folder.

git branch | list all the branches.
git branch <new-branch-name> | Creates a new branch and gives it name.
git branch -b <new-branch-name> | Creates a new branch and move to it.
to go to a branch use the git checkout <branch-name> command.

git merge <branch-name> | to merge a branch to master branch.
git branch -d <branch-name> | to delete a branch.